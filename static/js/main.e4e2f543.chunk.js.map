{"version":3,"sources":["components/elements/Header/Header.component.jsx","config.js","components/elements/SearchBar/SearchBar.component.jsx","components/elements/FourColGrid/FourColGrid.component.jsx","components/elements/MovieThumb/MovieThumb.component.jsx","components/elements/LoadMoreBtn/LoadMoreBtn.component.jsx","components/elements/Spinner/Spinner.component.jsx","components/elements/FilterBar/FilterBar.component.jsx","components/Home/Home.component.jsx","components/elements/Navigation/Navigation.component.jsx","components/elements/MovieInfo/MovieInfo.component.jsx","components/Movie/Movie.component.jsx","components/elements/NotFound/NotFound.component.jsx","components/Auth/Login.component.jsx","components/elements/GenreChip/GenreChip.component.jsx","components/elements/ModalInput/ModalInput.component.jsx","components/elements/MovieAction/MovieAction.component.jsx","components/App/App.component.jsx","index.js"],"names":["Header","currentUser","logout","className","to","src","alt","onClick","pathname","action","API_URL","SearchBar","state","value","timeout","doSearch","event","callback","props","setState","target","clearTimeout","setTimeout","this","name","size","type","placeholder","onChange","Component","FourColGrid","header","loading","children","style","color","map","element","i","key","MovieThumb","image","movieId","movieName","authenticated","deleteItemHandler","textAlign","fontSize","margin","length","substr","LoadMoreBtn","text","Spinner","FilterBarComponent","sortByPopularity","sortByDirector","sortByMovie","orderBy","genre_options","genre_filter","options","label","endpoint","fetch","then","result","json","data","replace","match","toUpperCase","styles","singleValue","base","background","valueContainer","borderRadius","width","container","backgroundColor","sort_callback","isMulti","filter_callback","Home","movies","heroImage","currentPage","totalPages","searchTerm","sortBy","genre_filter_list","currentURLQuery","page","render","searchItems","fetchItems","sortItems","sortByOption","console","log","filterItems","genre_list_option","genre_option","join","loadMoreItems","append","parseInt","count","catch","error","_id","prevProps","prevState","snapshot","Navigation","movie","MovieInfo","directors","genre","clickable","min","max","optimum","low","high","imdb_score","popularity","split","textTransform","Movie","actors","statusCode","params","localStorage","getItem","JSON","parse","director","NotFound","LoginComponent","email","password","onSubmit","e","preventDefault","method","headers","body","stringify","response","token","alert","status","id","GenreChipComponent","onClose","classes","ModalInputComponent","list","handleChange","onKeyDown","item","MovieActionComponent","fetched","modalOpen","fetchMovieDetails","fetchGenreList","newValue","filter","onAddNew","modalOnClose","classList","contains","handleAddNewOnChange","requestPayload","history","location","deleteItem","disabled","required","includes","React","App","setItem","removeItem","verifyToken","Fragment","path","exact","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e4e2f543.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.styles.css';\r\n\r\nconst Header = ({currentUser, logout}) => {\r\n    return (\r\n        <div className=\"rmdb-header\">\r\n            <div className=\"rmdb-header-content\">\r\n                <Link to=\"/\">\r\n                    <img className=\"rmdb-logo\" src=\"/images/imdb_logo.png\" alt=\"rmdb-logo\" />\r\n                </Link>\r\n                {/*<img className=\"rmdb-tmdb-logo\" src=\"/images/tmdb_logo.png\" alt=\"tmdb-logo\" />*/}\r\n                { !currentUser ?\r\n                    <Link to=\"/login\">\r\n                        <button className=\"btn btn-warning rmdb-tmdb-logo\">Login</button>\r\n                    </Link>\r\n                    :\r\n                    <div >\r\n                        {/*<Link to=\"/logout\">*/}\r\n                        {/*    <button className=\"btn btn-danger rmdb-tmdb-logo\">Logout</button>*/}\r\n                        {/*</Link>*/}\r\n                        <button className=\"btn btn-danger rmdb-tmdb-logo\" onClick={logout}>Logout</button>\r\n                        <Link to={{pathname: \"/movie-action\", action: \"add\"}}>\r\n                            <button className=\"btn btn-outline-primary rmdb-tmdb-logo\">Add New</button>\r\n                        </Link>\r\n                        {/*<span className=\"rmdb-tmdb-logo bg-warning\">Welcome {currentUser.name}</span>*/}\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","// Configuration for TMDB from https://api.themoviedb.org/3/configuration?api_key=687f4af88c405c0b881295bba3d4adfc\r\n\r\n// const API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_URL = 'https://fynd-hiring-movies-app.herokuapp.com/';\r\n\r\n// Images\r\n// An image URL looks like this example:\r\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\r\n\r\n\r\nexport {\r\n  API_URL\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.styles.css';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    value: ''\r\n  }\r\n  // Must have this here so we can reset it\r\n  timeout = null;\r\n\r\n  doSearch = (event) => {\r\n    const { callback } = this.props;\r\n\r\n    this.setState({ value: event.target.value })\r\n    clearTimeout(this.timeout);\r\n    // Set a timeout to wait for the user to stop writing\r\n    // So we don´t have to make unnessesary calls\r\n    this.timeout = setTimeout( () => {\r\n      callback(this.state.value);\r\n    }, 500);\r\n  }\r\n\r\n  render () {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className=\"rmdb-searchbar\">\r\n        <div className=\"rmdb-searchbar-content\">\r\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n          <input\r\n            type=\"text\"\r\n            className=\"rmdb-searchbar-input\"\r\n            placeholder=\"Search\"\r\n            onChange={this.doSearch}\r\n            value={value}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  callback: PropTypes.func\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.styles.css';\r\n\r\nconst FourColGrid = ({ header, loading, children }) => {\r\n\r\n  const renderElements = () => {\r\n    const gridElements = children.map( (element, i) => (\r\n      <div key={i} className=\"rmdb-grid-element\">\r\n        {element}\r\n      </div>\r\n    ))\r\n    return gridElements;\r\n  }\r\n\r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n      {header && !loading ? <h1 style={{color: \"white\"}}>{header}</h1> : null}\r\n      <div className=\"rmdb-grid-content\">\r\n         {renderElements()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nFourColGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool\r\n}\r\n\r\nexport default FourColGrid;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MovieThumb.styles.css';\r\n\r\nconst MovieThumb = ({ image, movieId, movieName, authenticated, deleteItemHandler }) => (\r\n  <div className=\"rmdb-moviethumb\">\r\n    <Link to={{ pathname: `/${movieId}`,  movieName: `${movieName}`}}>\r\n      <img className=\"clickable\" src={image} alt=\"moviethumb\" />\r\n    </Link>\r\n    <div>\r\n      <div style={{color: \"white\", textAlign: \"center\", fontSize: \"large\", margin: \"7px 0\"}}>{movieName && movieName.length > 25 ? movieName.substr(0, 20)+\"...\" : movieName}</div>\r\n      {authenticated &&\r\n      <div style={{color: \"white\", textAlign: \"center\", fontSize: \"large\"}}>\r\n        <Link to={{pathname: \"/movie-action/\"+movieId, action: \"edit\", movieId}}>\r\n          <button className=\"btn btn-outline-warning\">Edit</button>\r\n        </Link>\r\n          {/*<button className=\"btn btn-outline-danger\" onClick={e => deleteItemHandler(movieId)}>Delete</button>*/}\r\n          <Link to={{pathname: \"/movie-action/\"+movieId, action: \"delete\", movieId}}>\r\n          <button className=\"btn btn-outline-danger\" >Delete</button>\r\n        </Link>\r\n      </div>}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.string,\r\n  movieName: PropTypes.string,\r\n  clickable: PropTypes.bool\r\n}\r\n\r\nexport default MovieThumb;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './LoadMoreBtn.styles.css';\r\n\r\nconst LoadMoreBtn = ({ text, onClick }) => (\r\n  <div className=\"rmdb-loadmorebtn\" onClick={onClick}>\r\n    <h6>{text}</h6>\r\n  </div>\r\n)\r\n\r\nLoadMoreBtn.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nexport default LoadMoreBtn;\r\n","import React from 'react';\r\nimport './Spinner.styles.css';\r\n\r\nconst Spinner = () => (\r\n  <div className=\"loader\"></div>\r\n)\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { API_URL } from '../../../config';\r\nimport PropTypes from 'prop-types';\r\nimport './FilterBar.styles.css';\r\nimport Select from 'react-select'\r\n\r\nclass FilterBarComponent extends Component{\r\n    state = {\r\n        sortByPopularity : false,\r\n        sortByDirector: false,\r\n        sortByMovie : false,\r\n        orderBy: 1,\r\n        genre_options: [],\r\n        genre_filter: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const endpoint = `${API_URL}movies/genre`;\r\n        fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                let options = result.data.map(({name}) => ({value: name, label: name.replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase())}))\r\n                this.setState({genre_options: options})\r\n            })\r\n    }\r\n\r\n    options = [\r\n        { value: 'name', label: 'Movies' },\r\n        { value: 'director', label: 'Directors' },\r\n        { value: 'popularity', label: '99Popularity' }\r\n    ];\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-actionbar\">\r\n                <div className=\"rmdb-action-content\">\r\n                    {/*<FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />*/}\r\n                    <form>\r\n                        <div className=\"container px-4 py-2\">\r\n                            <div className=\"row gx-5\">\r\n                                <div className=\"col\">\r\n                                    <Select\r\n                                        placeholder={'Sort by'}\r\n                                        name=\"sort-by-filer\"\r\n                                        options={this.options}\r\n                                        styles={{\r\n                                            singleValue: (base) => ({ ...base,\r\n                                                background: \"#353535\",\r\n                                                color: 'white' }),\r\n                                            valueContainer: (base) => ({\r\n                                                ...base,\r\n                                                background: \"#353535\",\r\n                                                borderRadius: \"5px\",\r\n                                                color: 'white',\r\n                                                width: '100%',\r\n                                            }),\r\n                                            container: (base) => ({\r\n                                                ...base,\r\n                                                backgroundColor: \"#353535\",\r\n                                            }),\r\n                                        }}\r\n                                        onChange={this.props.sort_callback}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <Select\r\n                                        placeholder={'Select Genres'}\r\n                                        name=\"genre-filter\"\r\n                                        options={this.state.genre_options}\r\n                                        isMulti\r\n                                        styles={{\r\n                                            singleValue: (base) => ({ ...base,\r\n                                                background: \"#353535\",\r\n                                                color: 'white' }),\r\n                                            valueContainer: (base) => ({\r\n                                                ...base,\r\n                                                background: \"#353535\",\r\n                                                borderRadius: \"5px\",\r\n                                                color: 'white',\r\n                                                width: '100%',\r\n                                            }),\r\n                                            container: (base) => ({\r\n                                                ...base,\r\n                                                backgroundColor: \"#353535\",\r\n                                            }),\r\n                                        }}\r\n                                        onChange={this.props.filter_callback}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nFilterBarComponent.propTypes = {\r\n    sort_callback : PropTypes.func,\r\n    filter_callback : PropTypes.func\r\n}\r\n\r\nexport default FilterBarComponent;\r\n","import React, { Component } from 'react';\r\nimport { API_URL } from '../../config';\r\nimport SearchBar from '../elements/SearchBar/SearchBar.component';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid.component';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb.component';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn.component';\r\nimport Spinner from '../elements/Spinner/Spinner.component';\r\nimport './Home.styles.css';\r\nimport FilterBarComponent from \"../elements/FilterBar/FilterBar.component\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 1,\r\n    totalPages: 0,\r\n    searchTerm: '',\r\n    sortBy: \"popularity\",\r\n    genre_filter_list: [],\r\n    currentURLQuery : {page : 1},\r\n    render : false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true })\r\n    this.fetchItems();\r\n  }\r\n\r\n  searchItems = (searchTerm) => {\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm\r\n    })\r\n\r\n    this.fetchItems();\r\n  }\r\n\r\n  sortItems = (sortByOption, orderBy = 1) => {\r\n    console.log(\"sort items called\",sortByOption, orderBy);\r\n    this.setState({\r\n      loading: true,\r\n      sortBy: sortByOption.value\r\n    });\r\n  }\r\n\r\n  filterItems = (genre_list_option) => {\r\n    console.log(\"filter items called\", genre_list_option)\r\n    this.setState({\r\n      loading: true,\r\n      genre_list_option: genre_list_option.map(genre_option => genre_option.value).join(\",\")\r\n    })\r\n  }\r\n\r\n  loadMoreItems = () => {\r\n    const { currentPage } = this.state;\r\n    this.setState({ loading: true, currentPage: currentPage + 1 })\r\n  }\r\n\r\n  fetchItems = (append = false) => {\r\n    const { movies, sortBy, searchTerm, currentPage } = this.state;\r\n    const endpoint =`${API_URL}movies?page=${currentPage}&sort_by=${sortBy}&search_text=${searchTerm}`;\r\n    fetch(endpoint)\r\n    .then(result => result.json())\r\n    .then(result => {\r\n      this.setState({\r\n        movies: append ? [...movies, ...result.data.data] : result.data.data,\r\n        loading: false,\r\n        currentPage: parseInt(result.data.page),\r\n        totalPages: parseInt(result.data.count)\r\n      })\r\n    })\r\n    .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  render() {\r\n    const { movies, loading, currentPage, totalPages, searchTerm } = this.state;\r\n    return (\r\n      <div className=\"rmdb-home\">\r\n        <FilterBarComponent sort_callback={this.sortItems} filter_callback={this.filterItems}/>\r\n        <SearchBar callback={this.searchItems}/>\r\n        <div className=\"rmdb-home-grid\">\r\n            <FourColGrid\r\n              header={searchTerm ? 'Search Result' : 'Popular Movies'}\r\n              loading={loading}\r\n            >\r\n              {movies.map( (element, i) => (\r\n                <MovieThumb\r\n                  key={i}\r\n                  image={'./images/no_image.jpg'}\r\n                  movieId={element._id}\r\n                  movieName={element.name}\r\n                  authenticated={this.props.currentUser != null}\r\n                />\r\n              ))}\r\n            </FourColGrid>\r\n            {loading ? <Spinner /> : null}\r\n            {(currentPage <= totalPages && !loading) ?\r\n              <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n              : null\r\n            }\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if(this.state.loading){\r\n      if(prevState.currentPage !== this.state.currentPage)\r\n        this.fetchItems(true);\r\n      else\r\n        this.fetchItems();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Navigation.styles.css';\r\n\r\nconst Navigation = ({ movie }) => (\r\n  <div className=\"rmdb-navigation\">\r\n    <div className=\"rmdb-navigation-content\">\r\n      <Link to=\"/\">\r\n        <p>Home</p>\r\n      </Link>\r\n      <p>/</p>\r\n      <p>{movie}</p>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nNavigation.propTypes = {\r\n  movie: PropTypes.string\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb.component';\r\nimport './MovieInfo.styles.css';\r\n\r\nconst MovieInfo = ({ movie, directors = \"\", genre = [] }) => (\r\n  <div className=\"rmdb-movieinfo\"\r\n    style={{\r\n      background: '#000'\r\n    }}\r\n  >\r\n    <div className=\"rmdb-movieinfo-content\">\r\n      <div className=\"rmdb-movieinfo-thumb\">\r\n        <MovieThumb\r\n          image={'./images/no_image.jpg'}\r\n          clickable={false}\r\n        />\r\n      </div>\r\n      <div className=\"rmdb-movieinfo-text\">\r\n        <h1>{movie.name}</h1>\r\n        <h3>IMDB RATING</h3>\r\n        <div className=\"rmdb-rating\">\r\n          <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={ movie.imdb_score * 10}></meter>\r\n          <p className=\"rmdb-score\">{movie.imdb_score}</p>\r\n        </div>\r\n        <h3>99Popularity</h3>\r\n        <div className=\"rmdb-rating\">\r\n          <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={ movie.popularity}></meter>\r\n          <p className=\"rmdb-score\">{movie.popularity}</p>\r\n        </div>\r\n        {directors.split(\",\").length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n        <p key={\"directors\"} className=\"rmdb-director\">{directors}</p>\r\n        {<h3>Genre</h3>}\r\n        {genre.map( (element, i) => {\r\n          return <p key={i} style={{textTransform: \"capitalize\"}} className=\"rmdb-director\">{element}</p>\r\n        })}\r\n      </div>\r\n      <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n    </div>\r\n  </div>\r\n)\r\n\r\nMovieInfo.propTypes = {\r\n  movie: PropTypes.object,\r\n  directors: PropTypes.string\r\n}\r\n\r\nexport default MovieInfo;\r\n","import React, { Component } from 'react';\r\nimport { API_URL } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation.component';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo.component';\r\nimport Spinner from '../elements/Spinner/Spinner.component';\r\nimport './Movie.styles.css';\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    if (localStorage.getItem(`${movieId}`)) {\r\n      let state = JSON.parse(localStorage.getItem(`${movieId}`))\r\n      this.setState({ ...state })\r\n    } else {\r\n      this.setState({ loading: true })\r\n      // First fetch the movie ...\r\n      let endpoint = `${API_URL}movies/${movieId}`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    // const { movieId } = this.props.match.params;\r\n\r\n    fetch(endpoint)\r\n    .then(result => result.json())\r\n    .then(result => {\r\n\r\n      if (result.statusCode === 404) {\r\n        console.log(\"here\")\r\n        // If we don't find any movie\r\n        this.setState({ loading: false });\r\n      } else {\r\n        this.setState({ movie: result.data, loading : false }, () => {\r\n          // ... then fetch actors in the setState callback function\r\n          // let endpoint = `${API_URL}movies/${movieId}/credits?api_key=${API_KEY}`;\r\n          // fetch(endpoint)\r\n          // .then(result => result.json())\r\n          // .then(result => {\r\n          //\r\n          //   const directors = result.crew.filter( (member) => member.job === \"Director\");\r\n          //\r\n          //   this.setState({\r\n          //     actors: result.cast,\r\n          //     directors,\r\n          //     loading: false\r\n          //   }, () => {\r\n          //     localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\r\n          //   })\r\n          // })\r\n        })\r\n      }\r\n    })\r\n    .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  render() {\r\n    // const { movieName } = this.props.location;\r\n    const { movie, loading } = this.state;\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {movie ?\r\n        <div>\r\n          <Navigation movie={movie.name} />\r\n          <MovieInfo movie={movie} directors={movie.director} genre={movie.genre} />\r\n          {/*<MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue} />*/}\r\n        </div>\r\n        : <h1>No movie found</h1> }\r\n        {/*{actors ?*/}\r\n        {/*<div className=\"rmdb-movie-grid\">*/}\r\n        {/*  <FourColGrid header={'Actors'}>*/}\r\n        {/*    {actors.map( (element, i) => (*/}\r\n        {/*      <Actor key={i} actor={element} />*/}\r\n        {/*    ))}*/}\r\n        {/*  </FourColGrid>*/}\r\n        {/*</div>*/}\r\n        {/*: null }*/}\r\n        {/*{ !loading ? <h1>No movie found</h1> : null }*/}\r\n        {loading ? <Spinner /> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h1>Whooops. This page doesn't exist</h1>\r\n  </div>\r\n)\r\n\r\nexport default NotFound;","import React,{Component} from \"react\";\r\nimport \"./login.styles.css\";\r\nimport {API_URL} from \"../../config\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass LoginComponent extends Component{\r\n    state = {\r\n        email : \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {email, password} = this.state;\r\n        let endpoint = `${API_URL}users/authenticate`;\r\n        fetch(endpoint,{\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body : JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if(result.statusCode === 200){\r\n                    this.props.authenticated(result.data.token)\r\n                }else if(result.statusCode === 401){\r\n                    alert(\"Invalid email/password\");\r\n                }else{\r\n                    alert(\"Something went wrong!!Try again later\")\r\n                }\r\n            })\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    render() {\r\n        if(this.state.status){\r\n            return <Redirect to={\"/\"} />\r\n        }\r\n        return (\r\n            <div className=\"login-page dark-mode\">\r\n                <div className=\"login-box dark-mode\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" value={this.state.email} onChange={e => this.setState({email : e.target.value})} className=\"dark-mode\"/>\r\n                        <input type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={e => this.setState({password : e.target.value})} className=\"dark-mode\"/>\r\n                        <button type=\"submit\" id=\"login-button\" className=\"dark-mode\">Login</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default LoginComponent;\r\n","import React from \"react\";\r\nimport \"./GenreCchip.styles.css\"\r\nexport default function GenreChipComponent({name, onClose, classes}){\r\n    return (\r\n    <div key={name} className={\"basic-chip background-grey \"+ classes} onClick={onClose(name)} >{name.replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase())}\r\n        <a>\r\n            <span>x</span>\r\n        </a>\r\n    </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./ModalInput.styles.css\"\r\n\r\nfunction ModalInputComponent({list, value, handleChange, onClose}) {\r\n    return (\r\n        <div className={\"modal-panel\"} onClick={e => onClose(e)}>\r\n            <div className={\"input-modal\"}>\r\n                <label>Select Genres (Press enter to select)</label>\r\n                <input list={\"items\"} value={value} onKeyDown={handleChange}/>\r\n                <datalist id={\"items\"}>\r\n                    {list.map(item => <option key={item} value={item.replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase())} />)}\r\n                </datalist>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ModalInputComponent;\r\n","import React from \"react\";\r\nimport \"./MovieAction.styles.css\"\r\nimport {API_URL} from \"../../../config\";\r\nimport GenreChipComponent from \"../GenreChip/GenreChip.component\";\r\nimport ModalInputComponent from \"../ModalInput/ModalInput.component\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport default class MovieActionComponent extends React.Component{\r\n    state = {\r\n        name: '',\r\n        director: '',\r\n        genre: [],\r\n        popularity: '',\r\n        imdb_score: '',\r\n        genre_options: [],\r\n        fetched: false,\r\n        modalOpen : false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchGenreList();\r\n        if(this.props.history.location.action === \"delete\"){\r\n            this.deleteItem(this.props.match.params.movieId);\r\n        }\r\n        else if(this.props.history.location.action !== \"add\"){\r\n            this.fetchMovieDetails(this.props.match.params.movieId);\r\n        }\r\n    }\r\n\r\n    fetchMovieDetails = (movieId) => {\r\n        // movieId = \"61784a6d5fac41b0155b75e0\";\r\n        fetch(`${API_URL}movies/${movieId}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if(result.statusCode === 200){\r\n                    const {name, director, genre, popularity, imdb_score} = result.data;\r\n                    this.setState({\r\n                        name,\r\n                        director,\r\n                        genre,\r\n                        popularity,\r\n                        imdb_score,\r\n                        fetched: true\r\n                    })\r\n                }else if(result.statusCode === 404){\r\n                    alert(\"Movie not found\")\r\n                }else{\r\n                    alert(\"Something went wrong\")\r\n                }\r\n            })\r\n    }\r\n\r\n    fetchGenreList = () => {\r\n        fetch(`${API_URL}movies/genre`)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                this.setState({genre_options: result.data})\r\n            })\r\n    }\r\n\r\n    onClose = (name) => {\r\n        return () => {\r\n            console.log(\"close\", name);\r\n            let newValue = this.state.genre.filter(genre => genre !== name);\r\n            this.setState({\r\n                genre : newValue\r\n            })\r\n        }\r\n    }\r\n\r\n    onAddNew = () => {\r\n        return () => {\r\n            console.log(\"called\")\r\n            this.setState({modalOpen : true})\r\n        }\r\n    }\r\n    modalOnClose = (e) => {\r\n        if(e.target.classList.contains(\"modal-panel\")){\r\n            this.setState({ modalOpen: false })\r\n        }\r\n    }\r\n\r\n    handleAddNewOnChange = (e) => {\r\n        console.log(\"selected\",e.key, e.target.value)\r\n        if(e.key === \"Enter\"){\r\n            this.setState({ modalOpen: false, genre: [...this.state.genre, e.target.value ] })\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        let {name, director, genre, popularity, imdb_score} = this.state;\r\n        let requestPayload = {\r\n            genre,\r\n            director,\r\n            popularity,\r\n            imdb_score\r\n        };\r\n        let endpoint = \"\";\r\n        let method = \"\";\r\n        if(this.props.history.location.action === \"add\"){\r\n            endpoint = `${API_URL}movies`\r\n            method = \"POST\";\r\n            requestPayload[\"name\"] = name;\r\n        }else{\r\n            endpoint = `${API_URL}movies/${this.props.match.params.movieId}`;\r\n            method = \"PATCH\";\r\n        }\r\n\r\n        fetch(endpoint, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem(\"_token\")}`,\r\n            },\r\n            body : JSON.stringify(requestPayload)\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if(result.statusCode === 201 || result.statusCode === 200){\r\n                    this.setState({status: true})\r\n                }else{\r\n                    alert(\"Something Went Wrong\");\r\n                }\r\n            })\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        console.log(\"deleting id\", id)\r\n        const token = localStorage.getItem(\"_token\");\r\n        fetch(`${API_URL}movies/${id}`,{\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(() => this.setState({status : true}))\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.history)\r\n        // console.log(this.state)\r\n        // console.log(this.state.genre.map(genre => ({value: genre, label: genre.replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase())})))\r\n        // if(this.props.history.location.action){\r\n        //     return <Redirect to={\"/\"} />\r\n        // }\r\n        if(this.state.status){\r\n            return <Redirect to={\"/\"} />\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"login-page dark-mode\">\r\n                    <div className=\"login-box dark-mode\">\r\n                        <h1 className=\"dark-mode\">{this.props.history.location.action === \"add\" ? \"Add Movie\" : \"Update Movie\"}</h1>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <input type=\"text\" placeholder=\"Name\" value={this.state.name} disabled={this.props.history.location.action !== \"add\"} onChange={e => this.setState({name: e.target.value})} className=\"dark-mode\" required/>\r\n                            <input type=\"text\" placeholder=\"Directors\" value={this.state.director} onChange={e => this.setState({director: e.target.value})} className=\"dark-mode\" required/>\r\n                            <input type=\"text\" placeholder=\"99Popularity\" value={this.state.popularity} onChange={e => this.setState({popularity: e.target.value})} className=\"dark-mode\" required/>\r\n                            <input type=\"text\" placeholder=\"IMDB Score\" value={this.state.imdb_score} onChange={e => this.setState({imdb_score: e.target.value})} className=\"dark-mode\" required />\r\n                            <div className=\"chip-board\">\r\n                                {this.state.genre.map(name => <GenreChipComponent key={name} name={name} onClose={this.onClose} />)}\r\n                                <GenreChipComponent key={\"add-new\"} name={\"+ add new\"} onClose={this.onAddNew} classes={\"add-new\"} />\r\n                            </div>\r\n                            <button type=\"submit\" className=\"dark-mode\">Submit</button>\r\n                        </form>\r\n                        {this.state.modalOpen && <ModalInputComponent list={this.state.genre_options.filter(genre => !this.state.genre.includes(genre.name)).map(genre => genre.name)} handleChange={this.handleAddNewOnChange} onClose={this.modalOnClose} />}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\r\nimport Header from '../elements/Header/Header.component';\r\nimport Home from '../Home/Home.component';\r\nimport Movie from '../Movie/Movie.component';\r\nimport NotFound from '../elements/NotFound/NotFound.component';\r\nimport LoginComponent from \"../Auth/Login.component\";\r\nimport {API_URL} from \"../../config\";\r\nimport MovieActionComponent from \"../elements/MovieAction/MovieAction.component\";\r\n\r\nclass App extends React.Component{\r\n    // let currentUser = localStorage.getItem(\"current-user\");\r\n    state = {\r\n        authenticated: false,\r\n        token : localStorage.getItem(\"_token\"),\r\n        currentUser : null\r\n    }\r\n\r\n    authenticated = (token) => {\r\n        localStorage.setItem(\"_token\", token);\r\n        this.setState({token })\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem(\"_token\");\r\n        this.setState({token: null, currentUser : null})\r\n    }\r\n\r\n    verifyToken = () => {\r\n        fetch(`${API_URL}users/me`,{\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': `Bearer ${this.state.token}`,\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState({\r\n                    currentUser : result.data\r\n                })\r\n            })\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    render() {\r\n        if(this.state.token && !this.state.currentUser){\r\n            this.verifyToken();\r\n        }\r\n        return (\r\n            <BrowserRouter>\r\n                <React.Fragment>\r\n                    <Header currentUser={this.state.currentUser} logout={this.logout} />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact >\r\n                            <Home currentUser={this.state.currentUser} />\r\n                        </Route>\r\n                        <Route path=\"/login\" exact >\r\n                            {!this.state.currentUser ? <LoginComponent authenticated={this.authenticated} /> : <Redirect to=\"/\" />}\r\n                        </Route>\r\n                        <Route path={\"/movie-action\"} exact component={MovieActionComponent} />\r\n                        <Route path={\"/movie-action/:movieId\"} exact component={MovieActionComponent} />\r\n                        <Route path=\"/:movieId\" component={Movie} exact />\r\n                        <Route component={NotFound} />\r\n                    </Switch>\r\n                </React.Fragment>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App.component\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}